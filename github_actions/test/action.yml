name: Run Pragma
description: 'Run Pragma'
inputs:
  lua-code:
    description: 'Lua Code'
    required: true
    default: ''
runs:
  using: "composite"
  steps:
    - name: Download Pragma (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        if (Test-Path -Path "pragma") {
          echo "Pragma already exists. Skipping download."
        } else {
          $repo = "Silverlan/pragma"
          Invoke-WebRequest -Uri "https://github.com/$repo/releases/download/nightly/pragma-win64.zip" -OutFile "pragma-win64.zip"
          Expand-Archive -Path "pragma-win64.zip" -DestinationPath "pragma"
        }

    - name: Download Pragma (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        if [ -d "pragma" ]; then
          echo "Pragma already exists. Skipping download."
        else
          wget https://github.com/Silverlan/pragma/releases/download/nightly/pragma-lin64.tar.gz
          mkdir pragma
          tar -xzvf pragma-lin64.tar.gz -C pragma
        fi

    - name: Write Lua Code to File
      shell: bash
      run: |
        mkdir -p pragma/lua
        echo "${{ inputs.lua-code }}" > pragma/lua/test_script.lua
        
    - name: CI
      uses: mxschmitt/action-tmate@v3.18
      with:
        detached: true

    - name: Run Test Scripts
      shell: bash
      run: |
        cd "pragma"
        if [ "$RUNNER_OS" == "Linux" ]; then
          chmod +x ./pragma
        fi
        ./pragma.com -cli -luaext -log 2 2 +map "test_physics" +"lua_exec tests/ci_runner_tests.lua"

    #- name: Run Test Scripts
    #  shell: bash
    #  run: |
    #    cd "pragma"
    #    if [ "$RUNNER_OS" == "Linux" ]; then
    #      chmod +x ./pragma
    #    fi
    #    ./pragma -cli -luaext -log 2 2 +map "test_physics" +"lua_exec tests/ci_runner_tests.lua"
      #./pragma -cli -luaext -log 2 2 +map "empty" +"lua_run print('test')" +"lua_exec test_script.lua" +"lua_run print('test2')" +"lua_run exit"
